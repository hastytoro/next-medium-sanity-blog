// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
/* An intermediatory/middleware like service, that we can build an API endpoints
from. Example here `hello.ts` function is created for us by Next.js. */
import type { NextApiRequest, NextApiResponse } from "next";
import sanityClient from "@sanity/client";

type Data = {
  name: string;
};

import { createCurrentUserHook, createClient } from "next-sanity";
import createImageUrlBuilder from "@sanity/image-url";

export const config = {
  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET || "production",
  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
  useCdn: process.env.NODE_ENV === "production",
  token: process.env.SANITY_API_TOKEN,
};

const client = sanityClient(config);

export default async function createComment(
  req: NextApiRequest,
  res: NextApiResponse
) {
  const { _id, name, email, comment } = JSON.parse(req.body);
  // Programmatically, we creating a document to submit to our backend:
  // Create a document. Requires a `_type` property. If no `_id` is provided, it
  // will be generated by the db. Returns a resolved promise if doc was created.
  try {
    await client.create({
      _type: "comment",
      post: {
        _type: "reference",
        _ref: _id,
      },
      name,
      email,
      comment,
    });
  } catch (error) {
    console.log(error);
    return res.status(500).json({ message: "Could not submit comment", error });
  }
  console.log("Comment submitted");
  return res.status(200).json({ message: "Comment submitted" });
}
